# 全局配置
worker_processes auto;  # 自动设置工作进程数
# 事件处理配置
events {
    worker_connections 1024;  # 每个工作进程允许的最大连接数
}

# 全局日志设置
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# http 块内配置 server
http {
    # 设置 MIME 类型
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset utf-8;
    # 日志设置
    access_log /var/log/nginx/access.log;
	# 设置客户端连接超时时间为 300 秒（5 分钟）
    client_body_timeout 300;
    # 设置客户端请求处理超时时间为 300 秒（5 分钟）
    client_header_timeout 300;
    # 设置代理连接超时时间为 300 秒（5 分钟）
    proxy_connect_timeout 300;
    # 设置代理请求发送超时时间为 300 秒（5 分钟）
    proxy_send_timeout 300;
    # 设置代理响应接收超时时间为 300 秒（5 分钟）
    proxy_read_timeout 300;

    # 服务器配置
    server {
        listen 39901;
        server_name pkc.com;

		location / {
			# 获取当前访问的地址端口
			set $current_url $scheme://$host:39901;
            add_header Content-Type 'text/html; charset=utf-8';

			return 200 '
			<html>
				<head><meta charset="utf-8"><title>PKC反向代理</title></head>
				<body>
					<h1>PKC反向代理地址</h1>
					<p>请复制到插件[插件设置]-[反向代理]填写： <strong>$current_url</strong></p>
				</body>
			</html>';
		}

		# 将访问 GitHub 原始文件的请求转发到 raw.githubusercontent.com
		location /raw/ {
		    proxy_buffer_size 128k;
            proxy_buffers 4 256k;
			proxy_pass https://raw.githubusercontent.com/;  # 转发到 raw.githubusercontent.com
			proxy_set_header Host raw.githubusercontent.com;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_redirect off;  # 关闭代理服务器的自动重定向
		}

		location /v1/tts {
		    proxy_buffer_size 128k;
            proxy_buffers 4 256k;
			proxy_pass https://api.fish.audio/v1/tts;
			proxy_set_header Host api.fish.audio;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Authorization $http_authorization;
			proxy_set_header Content-Type application/json;  # 如果 API 需要 Content-Type
			proxy_set_header Accept application/json;  # 如果 API 需要 Content-Type
			proxy_set_header Content-Length $content_length;
			proxy_redirect off;
			# 将所有请求头转发
			proxy_set_header * $http_*;
			# 设置允许 POST 请求
			proxy_method POST;
		}
		# FV 转语音
		location /v1/text-to-speech {
		    proxy_buffer_size 128k;
            proxy_buffers 4 256k;
			proxy_pass https://ttsapi.fineshare.com/v1/text-to-speech;
			proxy_set_header Host ttsapi.fineshare.com;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header Authorization $http_authorization;
			proxy_set_header Content-Type application/json;  # 如果 API 需要 Content-Type
			proxy_set_header Accept application/json;  # 如果 API 需要 Content-Type
			proxy_set_header Content-Length $content_length;
			proxy_redirect off;
			proxy_ssl_verify off;
			# 将所有请求头转发
			proxy_set_header * $http_*;
			# 设置允许 POST 请求
			proxy_method POST;
		}
		# FV 转语音
		location /tts-generated-voices/ {
            # 设置代理头信息
            proxy_set_header Host dlaudio.fineshare.net;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 禁用SSL验证
            proxy_ssl_verify off;
            # 代理到目标地址
            proxy_pass https://dlaudio.fineshare.net/tts-generated-voices/;
            # 音频文件缓存策略（1天）
            proxy_cache off;
            add_header Cache-Control "public, max-age=86400";
            # 处理MP3文件类型
            proxy_set_header Accept "audio/mpeg";
        }
        # FV 签到
        location /fvapi/ {
            proxy_set_header Host aivoiceover.fineshare.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 接口特殊配置
            proxy_ssl_verify off;
            proxy_pass https://aivoiceover.fineshare.com/api/;
            # 接口缓存禁用
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            # 处理跨域问题
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

            # 处理OPTIONS预检请求
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
         # FV cx
        location /fvusageapi/ {
            proxy_set_header Host usage.fineshare.com;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # 接口特殊配置
            proxy_ssl_verify off;
            proxy_pass https://usage.fineshare.com/api/;
            # 接口缓存禁用
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            # 处理跨域问题
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;

            # 处理OPTIONS预检请求
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

    }
    # 你可以在此处添加更多的 server 配置
}